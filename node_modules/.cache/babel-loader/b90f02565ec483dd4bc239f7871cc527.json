{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Documents/calc/src/App.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { IonApp, IonHeader, IonContent, IonToolbar, IonTitle, IonGrid, IonRow, IonCol, IonItem, IonLabel, IonInput } from '@ionic/react';\nimport BmiControls from './components/BmiControls';\nimport BmiResult from './components/BmiResult';\n/* Core CSS required for Ionic components to work properly */\n\nimport '@ionic/react/css/core.css';\n/* Basic CSS for apps built with Ionic */\n\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n/* Optional CSS utils that can be commented out */\n\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n/* Theme variables */\n\nimport './theme/variables.css';\n\nconst App = () => {\n  const [calculatedBmi, setCalculatedBmi] = useState();\n  const weightInputRef = useRef(null);\n  const heightInputRef = useRef(null);\n\n  const calculateBMI = () => {\n    const enteredWeight = weightInputRef.current.value;\n    const enteredHeight = heightInputRef.current.value;\n\n    if (!enteredHeight || !enteredWeight) {\n      return;\n    }\n\n    const bmi = +enteredWeight / (+enteredHeight * +enteredHeight);\n    setCalculatedBmi(bmi);\n  };\n\n  const resetInputs = () => {\n    weightInputRef.current.value = '';\n    heightInputRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(IonApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"BMI Calculator\"))), /*#__PURE__*/React.createElement(IonContent, {\n    className: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }, \"Your Height\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"\",\n    ref: heightInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, \" \")))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, \"Your Weight\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"number\",\n    ref: weightInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, \" \")))), /*#__PURE__*/React.createElement(BmiControls, {\n    onCalculate: calculateBMI,\n    onReset: resetInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }), calculatedBmi && /*#__PURE__*/React.createElement(BmiResult, {\n    result: calculatedBmi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tamara/Documents/calc/src/App.tsx"],"names":["React","useRef","useState","IonApp","IonHeader","IonContent","IonToolbar","IonTitle","IonGrid","IonRow","IonCol","IonItem","IonLabel","IonInput","BmiControls","BmiResult","App","calculatedBmi","setCalculatedBmi","weightInputRef","heightInputRef","calculateBMI","enteredWeight","current","value","enteredHeight","bmi","resetInputs"],"mappings":"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","sourcesContent":["import React,{ useRef,useState } from 'react';\nimport { IonApp, IonHeader, IonContent, IonToolbar, IonTitle, IonGrid, IonRow,IonCol, IonItem, IonLabel, IonInput} from '@ionic/react';\nimport BmiControls from './components/BmiControls';\nimport BmiResult from './components/BmiResult';\n\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => {\n\nconst [calculatedBmi,setCalculatedBmi] = useState<number>(); \n\n\n  const weightInputRef = useRef<HTMLIonInputElement>(null);\n  const heightInputRef = useRef<HTMLIonInputElement>(null);\n\n  const calculateBMI = () => {\n\n    const enteredWeight = weightInputRef.current!.value;\n    const enteredHeight = heightInputRef.current!.value;\n\n    if (!enteredHeight || !enteredWeight){\n      return;\n    }\n\n    const bmi = +enteredWeight / (+enteredHeight * +enteredHeight);\n setCalculatedBmi(bmi);\n  };\n\n\n  const resetInputs = () => {\nweightInputRef.current!.value = '';\nheightInputRef.current!.value = '';\n  };\n  return (<IonApp>\n    <IonHeader>\n        <IonToolbar color = \"primary\">\n          <IonTitle>BMI Calculator</IonTitle>\n        </IonToolbar>\n    </IonHeader>\n <IonContent className = \"ion-padding\">\n   <IonGrid>\n     <IonRow>\n       <IonCol>\n         <IonItem>\n           <IonLabel position = \"floating\">Your Height</IonLabel>\n           <IonInput type =\"\" ref={heightInputRef}> </IonInput>\n         </IonItem>\n       </IonCol>\n     </IonRow>\n     <IonRow>\n       <IonCol>\n       <IonItem>\n           <IonLabel position = \"floating\">Your Weight</IonLabel>\n           <IonInput type = \"number\" ref={weightInputRef}> </IonInput>\n         </IonItem>\n       </IonCol>\n     </IonRow>\n   <BmiControls onCalculate = {calculateBMI} onReset = {resetInputs}/>\n    { calculatedBmi &&(\n      <BmiResult result = {calculatedBmi}/>\n     )}\n   </IonGrid>\n </IonContent>\n\n  </IonApp>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}